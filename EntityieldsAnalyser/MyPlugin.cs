using System;
using System.ComponentModel.Composition;
using System.IO;
using System.Linq;
using System.Collections.Generic;
using System.Reflection;
using XrmToolBox.Extensibility;
using XrmToolBox.Extensibility.Interfaces;

namespace EntityieldsAnalyser
{
    // Do not forget to update version number and author (company attribute) in AssemblyInfo.cs class
    // To generate Base64 string for Images below, you can use https://www.base64-image.de/
    [Export(typeof(IXrmToolBoxPlugin)),
        ExportMetadata("Name", "Entity Fields Analysis"),
        //ExportMetadata("Description", "A tool to get an overview about the fields in your entity, and also a field calculator you can use to get an idea if you entity is able to support the fields you want to create."),
        ExportMetadata("Description", "A tool to get an overview about the usage of fields in your entity, and an entity field calculator."),
        // Please specify the base64 content of a 32x32 pixels image
        ExportMetadata("SmallImageBase64", "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"),
        // Please specify the base64 content of a 80x80 pixels image
        ExportMetadata("BigImageBase64", ""),
        ExportMetadata("BackgroundColor", "Lavender"),
        ExportMetadata("PrimaryFontColor", "Black"),
        ExportMetadata("SecondaryFontColor", "Gray")]
    public class MyPlugin : PluginBase
    {
        public override IXrmToolBoxPluginControl GetControl()
        {
            return new MyPluginControl();
        }

        /// <summary>
        /// Constructor 
        /// </summary>
        public MyPlugin()
        {
            // If you have external assemblies that you need to load, uncomment the following to 
            // hook into the event that will fire when an Assembly fails to resolve
            // AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(AssemblyResolveEventHandler);
        }

        /// <summary>
        /// Event fired by CLR when an assembly reference fails to load
        /// Assumes that related assemblies will be loaded from a subfolder named the same as the Plugin
        /// For example, a folder named Sample.XrmToolBox.MyPlugin 
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="args"></param>
        /// <returns></returns>
        private Assembly AssemblyResolveEventHandler(object sender, ResolveEventArgs args)
        {
            Assembly loadAssembly = null;
            Assembly currAssembly = Assembly.GetExecutingAssembly();

            // base name of the assembly that failed to resolve
            var argName = args.Name.Substring(0, args.Name.IndexOf(","));

            // check to see if the failing assembly is one that we reference.
            List<AssemblyName> refAssemblies = currAssembly.GetReferencedAssemblies().ToList();
            var refAssembly = refAssemblies.Where(a => a.Name == argName).FirstOrDefault();

            // if the current unresolved assembly is referenced by our plugin, attempt to load
            if (refAssembly != null)
            {
                // load from the path to this plugin assembly, not host executable
                string dir = Path.GetDirectoryName(currAssembly.Location).ToLower();
                string folder = Path.GetFileNameWithoutExtension(currAssembly.Location);
                dir = Path.Combine(dir, folder);

                var assmbPath = Path.Combine(dir, $"{argName}.dll");

                if (File.Exists(assmbPath))
                {
                    loadAssembly = Assembly.LoadFrom(assmbPath);
                }
                else
                {
                    throw new FileNotFoundException($"Unable to locate dependency: {assmbPath}");
                }
            }

            return loadAssembly;
        }
    }
}